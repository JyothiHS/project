# -*- coding: utf-8 -*-
"""finding_valid_string.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s0V-IwJaqD98Vzip4Rrb0lByXh3eoqe_

*Write a program that takes a string as input,
and determines if all characters of the string
appear the same number of times. If so,
return
"YES". Otherwise, check if removing
just one character at any index in the string
will make all characters appear the same
number of times. If so, return
"YES".
Otherwise, return
"NO".
*
"""

CHARS = 26

def isValidString(str):

    freq = [0]*CHARS

    # freq[] : stores the frequency of each
    # character of a string
    for i in range(len(str)):
        freq[ord(str[i])-ord('a')] += 1

    # Find first character with non-zero frequency
    freq1 = 0
    count_freq1 = 0
    for i in range(CHARS):

        if (freq[i] != 0):

            freq1 = freq[i]
            count_freq1 = 1
            break

    # Find a character with frequency different
    # from freq1.
    freq2 = 0
    count_freq2 = 0
    for j in range(i+1,CHARS):

        if (freq[j] != 0):

            if (freq[j] == freq1):
                count_freq1 += 1
            else:

                count_freq2 = 1
                freq2 = freq[j]
                break

    # If we find a third non-zero frequency
    # or count of both frequencies become more
    # than 1, then return false
    for k in range(j+1,CHARS):

        if (freq[k] != 0):

            if (freq[k] == freq1):
                count_freq1 += 1
            if (freq[k] == freq2):
                count_freq2 += 1

            # If we find a third non-zero freq
            else:
                return False

        # If counts of both frequencies is more than 1
        if (count_freq1 > 1 and count_freq2 > 1):
            return False

    # Return true if we reach here
    return True

# Driver code
if __name__ == "__main__":
    str= input("Enter a string :")

    if (isValidString(str)):
        print("YES")
    else:
        print("NO")

